[{"@context": "https://schema.org", "@graph": [{"@type": "Event", "name": "Computational biomolecular simulation workflows with BioExcel building blocks", "url": "https://bioexcel.eu/events/computational-biomolecular-simulation-workflows-with-bioexcel-building-blocks-3/", "description": "**Overview** : Are you interested in computational biomolecular simulation methods such as Molecular Dynamics simulations, but scared to make the first step? What if you could start smoothly using interactive, graphical user interfaces like Jupyter Notebooks? What if you could easily build pipelines chaining different programs using a single, interoperable library with a unique syntax?\n\nIn this session, we will introduce the BioExcel building blocks, a fully interoperable software library comprising a collection of Python wrappers on top of biomolecular simulation tools such as GROMACS, Ambertools, Openbabel or ACPYPE. The philosophy behind its design, following best practices and FAIR principles for software development, makes it easy to find, install and use, increasing reproducibility and (re)usability. Demonstration workflows implemented in Jupyter notebooks using the library will be presented and explained step by step (e.g. protein-ligand complex GROMACS MD setup). The first steps on how to build and run complex workflows in command line will be explored.\n\n**Audience** : This session is aimed at people interested in:\n\n  * Starting with computational biomolecular simulations, and more specifically Molecular Dynamics simulations.\n  * Building computational biomolecular simulations workflows, ensuring reproducibility.\n\n\n\nNo expertise in Molecular Dynamics is needed to attend the training, although some knowledge and familiarity with this method are recommended to properly follow the course. Minimum Linux skills are also required. This is an interactive session that is presented remotely using Zoom.\n\n**Learning outcomes** : At the end of these sessions, you will be able to\n\n  * Interactively work with computational biomolecular simulation demonstration workflows built using the BioExcel building blocks library in Jupyter Notebooks sessions: change input structure, modify parameters, add/remove steps, etc.\n  * Write a new computational biomolecular simulation workflow using the BioExcel building blocks library from scratch.\n  * Launch computational biomolecular simulation workflows built using the BioExcel building blocks library in a command-line interface.", "eventAttendanceMode": "https://schema.org/OnlineEventAttendanceMode", "eventStatus": "https://schema.org/EventScheduled", "image": {"@type": "ImageObject", "representativeOfPage": "True", "url": "images/FocusCoE_placeholder.webp", "width": 720, "height": 231}, "doorTime": "2021-11-22T15:00:00+0100", "startDate": "2021-11-22T15:00:00+0100", "endDate": "2021-11-24T17:00:00+0100", "@id": "https://hpc-portal.eu/node/1456", "isAccessibleForFree": "True", "location": {"@type": "VirtualLocation", "url": "https://bioexcel.eu/events/computational-biomolecular-simulation-workflows-with-bioexcel-building-blocks-3/", "geo": {"@type": "GeoCoordinates", "latitude": "52.077917351168", "longitude": "0.18712399999997"}}, "language": ["English"], "sector": ["Research and Academia", "Industry"], "country": ["United Kingdom"], "projects": ["BioExcel-2"], "level": ["Beginner", "Intermediate"], "online": ["Live (synchronous)"], "html_description": "<p><strong>Overview</strong>: Are you interested in computational biomolecular simulation methods such as Molecular Dynamics simulations, but scared to make the first step? What if you could start smoothly using interactive, graphical user interfaces like Jupyter Notebooks? What if you could easily build pipelines chaining different programs using a single, interoperable library with a unique syntax?</p> <p>In this session, we will introduce the <a href=\"https://www.nature.com/articles/s41597-019-0177-4\">BioExcel building blocks</a>, a fully interoperable software library comprising a collection of Python wrappers on top of biomolecular simulation tools such as GROMACS, Ambertools, Openbabel or ACPYPE. The philosophy behind its design, following best practices and FAIR principles for software development, makes it easy to find, install and use, increasing reproducibility and (re)usability. Demonstration workflows implemented in Jupyter notebooks using the library will be presented and explained step by step (e.g. <a href=\"http://mmb.irbbarcelona.org/biobb/workflows/tutorials/protein-complex_md_setup\">protein-ligand complex GROMACS MD setup</a>). The first steps on how to build and run complex workflows in command line will be explored.</p> <p><strong>Audience</strong>: This session is aimed at people interested in:</p> <ul> <li>Starting with computational biomolecular simulations, and more specifically Molecular Dynamics simulations.</li> <li>Building computational biomolecular simulations workflows, ensuring reproducibility.</li> </ul> <p>No expertise in Molecular Dynamics is needed to attend the training, although some knowledge and familiarity with this method are recommended to properly follow the course. Minimum Linux skills are also required. This is an interactive session that is presented remotely using Zoom.</p> <p><strong>Learning outcomes</strong>: At the end of these sessions, you will be able to</p> <ul> <li>Interactively work with computational biomolecular simulation demonstration workflows built using the BioExcel building blocks library in Jupyter Notebooks sessions: change input structure, modify parameters, add/remove steps, etc.</li> <li>Write a new computational biomolecular simulation workflow using the BioExcel building blocks library from scratch.</li> <li>Launch computational biomolecular simulation workflows built using the BioExcel building blocks library in a command-line interface.</li> </ul>", "markdown_description": "**Overview** : Are you interested in computational biomolecular simulation methods such as Molecular Dynamics simulations, but scared to make the first step? What if you could start smoothly using interactive, graphical user interfaces like Jupyter Notebooks? What if you could easily build pipelines chaining different programs using a single, interoperable library with a unique syntax?\n\nIn this session, we will introduce the [BioExcel building blocks](https://www.nature.com/articles/s41597-019-0177-4), a fully interoperable software library comprising a collection of Python wrappers on top of biomolecular simulation tools such as GROMACS, Ambertools, Openbabel or ACPYPE. The philosophy behind its design, following best practices and FAIR principles for software development, makes it easy to find, install and use, increasing reproducibility and (re)usability. Demonstration workflows implemented in Jupyter notebooks using the library will be presented and explained step by step (e.g. [protein-ligand complex GROMACS MD setup](http://mmb.irbbarcelona.org/biobb/workflows/tutorials/protein-complex_md_setup)). The first steps on how to build and run complex workflows in command line will be explored.\n\n**Audience** : This session is aimed at people interested in:\n\n  * Starting with computational biomolecular simulations, and more specifically Molecular Dynamics simulations.\n  * Building computational biomolecular simulations workflows, ensuring reproducibility.\n\n\n\nNo expertise in Molecular Dynamics is needed to attend the training, although some knowledge and familiarity with this method are recommended to properly follow the course. Minimum Linux skills are also required. This is an interactive session that is presented remotely using Zoom.\n\n**Learning outcomes** : At the end of these sessions, you will be able to\n\n  * Interactively work with computational biomolecular simulation demonstration workflows built using the BioExcel building blocks library in Jupyter Notebooks sessions: change input structure, modify parameters, add/remove steps, etc.\n  * Write a new computational biomolecular simulation workflow using the BioExcel building blocks library from scratch.\n  * Launch computational biomolecular simulation workflows built using the BioExcel building blocks library in a command-line interface.", "summary": "**Overview** : Are you interested in computational biomolecular simulation methods such as Molecular Dynamics simulations, but scared..."}]}, {"@context": "https://schema.org", "@graph": [{"@type": "Event", "name": "YALES2 Training Session", "description": "YALES2 aims at the solving of two-phase combustion from primary atomization to pollutant prediction on massive complex meshes. It is able to handle efficiently unstructured meshes with several billions of elements, thus enabling the Direct Numerical Simulation and Large-Eddy Simulation of laboratory and semi-industrial configurations. The recent developments are focused on the dynamic mesh adaptation of tetrahedral-based massive meshes for fronts and interfaces.\n\nThis training session targets researchers and engineers interested in learning YALES2 and/or the numerical methodologies developed in YALES2: solving for incompressible turbulent flows, two-phase flows, dynamic mesh adaptation, etc.\n\nMore information about YALES2 can be found **here**.\n\n**Instructors:** Vincent Moureau (CNRS), Ghislain Lartigue (CNRS), Pierre B\u00e9nard (INSA of Rouen)", "eventAttendanceMode": "https://schema.org/MixedEventAttendanceMode", "eventStatus": "https://schema.org/EventScheduled", "image": {"@type": "ImageObject", "representativeOfPage": "True", "url": "images/FocusCoE_placeholder.webp", "width": 720, "height": 231}, "doorTime": "2021-11-17T09:00:00+0100", "startDate": "2021-11-17T09:00:00+0100", "endDate": "2021-11-19T17:00:00+0100", "@id": "https://hpc-portal.eu/node/1321", "isAccessibleForFree": "True", "location": {"@type": "VirtualLocation", "url": "https://coec-project.eu/event/yales2-training-session/", "geo": {"@type": "GeoCoordinates", "latitude": "49.387241159725", "longitude": "1.0687408620638"}}, "language": ["English"], "sector": ["Research and Academia", "Industry"], "country": ["France"], "projects": ["CoEC"], "level": ["Beginner", "Intermediate"], "online": ["Live (synchronous)"], "url": "https://hpc-portal.eu/node/1321", "html_description": "<p>YALES2 aims at the solving of two-phase combustion from primary atomization to pollutant prediction on massive complex meshes. It is able to handle efficiently unstructured meshes with several billions of elements, thus enabling the Direct Numerical Simulation and Large-Eddy Simulation of laboratory and semi-industrial configurations. The recent developments are focused on the dynamic mesh adaptation of tetrahedral-based massive meshes for fronts and interfaces.</p> <p>This training session targets researchers and engineers interested in learning YALES2 and/or the numerical methodologies developed in YALES2: solving for incompressible turbulent flows, two-phase flows, dynamic mesh adaptation, etc.</p> <p>More information about YALES2 can be found <strong><a href=\"https://www.coria-cfd.fr/index.php/YALES2\">here</a></strong>.</p> <p><strong>Instructors:</strong> Vincent Moureau (CNRS), Ghislain Lartigue (CNRS), Pierre B\u00e9nard (INSA of Rouen)</p>", "markdown_description": "YALES2 aims at the solving of two-phase combustion from primary atomization to pollutant prediction on massive complex meshes. It is able to handle efficiently unstructured meshes with several billions of elements, thus enabling the Direct Numerical Simulation and Large-Eddy Simulation of laboratory and semi-industrial configurations. The recent developments are focused on the dynamic mesh adaptation of tetrahedral-based massive meshes for fronts and interfaces.\n\nThis training session targets researchers and engineers interested in learning YALES2 and/or the numerical methodologies developed in YALES2: solving for incompressible turbulent flows, two-phase flows, dynamic mesh adaptation, etc.\n\nMore information about YALES2 can be found **[here](https://www.coria-cfd.fr/index.php/YALES2)**.\n\n**Instructors:** Vincent Moureau (CNRS), Ghislain Lartigue (CNRS), Pierre B\u00e9nard (INSA of Rouen)", "summary": "YALES2 aims at the solving of two-phase combustion from primary atomization to pollutant prediction on massive complex meshes. It is..."}]}, {"@context": "https://schema.org", "@graph": [{"@type": "Event", "name": "High-throughput workflows for materials science with the Atomic Simulation Environment and Fireworks", "url": "https://nomad-coe.eu/events/ase-fireworks-workshop", "description": "This 4-days combined workshop/hackathon (2-day/2-day) will introduce young scientists from the electronic structure community to the _**latest developments in the Atomic Simulation Environment (ASE) and Fireworks software packages**_.\n\nThis meeting will give developers and users of ASE the possibility to present and discuss ongoing developments and to coordinate their efforts. A particular focus shall be put on automatized high-throughput computations for which the first fundamental steps are already implemented in ASE and are readily available for customization and further development. To this end, the coupling to Fireworks/atomate as a code independent workflow engine will be explored and possible synergy effects will be identified.\n\nThe first part of the workshop is _**intended for both younger (PhD/postdocs) and experienced researchers with an interest in high-throughput electronic structure calculations and materials design.**_ The last part of the workshop comprises more technical sessions aimed at bringing electronic structure (ES) code developers up to date with the latest developments of ASE/Fireworks related to high-throughput workflows, and a hackathon aimed at extending and improving the existing interfaces between ASE/Fireworks and ES codes to take full advantage of new powerful features.", "eventAttendanceMode": "https://schema.org/OfflineEventAttendanceMode", "eventStatus": "https://schema.org/EventScheduled", "image": {"@type": "ImageObject", "representativeOfPage": "True", "url": "images/FocusCoE_placeholder.webp", "width": 720, "height": 231}, "doorTime": "2021-11-15T09:00:00+0100", "startDate": "2021-11-15T09:00:00+0100", "endDate": "2021-11-19T17:00:00+0100", "@id": "https://hpc-portal.eu/node/1330", "isAccessibleForFree": "True", "location": {"@type": "VirtualLocation", "url": "https://nomad-coe.eu/events/ase-fireworks-workshop", "geo": {"@type": "GeoCoordinates", "latitude": "55.785408777", "longitude": "12.51958935"}}, "language": ["English"], "sector": ["Research and Academia", "Industry"], "country": ["Denmark"], "projects": ["NOMAD"], "level": ["Beginner", "Intermediate"], "html_description": "<p>This 4-days combined workshop/hackathon (2-day/2-day) will introduce young scientists from the electronic structure community to the <em><strong>latest developments in the Atomic Simulation Environment (ASE) and Fireworks software packages</strong></em>.</p> <p>This meeting will give developers and users of ASE the possibility to present and discuss ongoing developments and to coordinate their efforts. A particular focus shall be put on automatized high-throughput computations for which the first fundamental steps are already implemented in ASE and are readily available for customization and further development. To this end, the coupling to Fireworks/atomate as a code independent workflow engine will be explored and possible synergy effects will be identified.</p> <p>The first part of the workshop is <em><strong>intended for both younger (PhD/postdocs) and experienced researchers with an interest in high-throughput electronic structure calculations and materials design.</strong></em> The last part of the workshop comprises more technical sessions aimed at bringing electronic structure (ES) code developers up to date with the latest developments of ASE/Fireworks related to high-throughput workflows, and a hackathon aimed at extending and improving the existing interfaces between ASE/Fireworks and ES codes to take full advantage of new powerful features.</p>", "markdown_description": "This 4-days combined workshop/hackathon (2-day/2-day) will introduce young scientists from the electronic structure community to the _**latest developments in the Atomic Simulation Environment (ASE) and Fireworks software packages**_.\n\nThis meeting will give developers and users of ASE the possibility to present and discuss ongoing developments and to coordinate their efforts. A particular focus shall be put on automatized high-throughput computations for which the first fundamental steps are already implemented in ASE and are readily available for customization and further development. To this end, the coupling to Fireworks/atomate as a code independent workflow engine will be explored and possible synergy effects will be identified.\n\nThe first part of the workshop is _**intended for both younger (PhD/postdocs) and experienced researchers with an interest in high-throughput electronic structure calculations and materials design.**_ The last part of the workshop comprises more technical sessions aimed at bringing electronic structure (ES) code developers up to date with the latest developments of ASE/Fireworks related to high-throughput workflows, and a hackathon aimed at extending and improving the existing interfaces between ASE/Fireworks and ES codes to take full advantage of new powerful features.", "summary": "This 4-days combined workshop/hackathon (2-day/2-day) will introduce young scientists from the electronic structure community to the..."}]}, {"@context": "https://schema.org", "@graph": [{"@type": "Event", "name": "TREX Build-system Hackathon", "url": "https://trex-coe.eu/events/trex-build-system-hackathon-8-12-nov-2021", "description": "Making HPC software easy to install on multiple supercomputers or different architectures is a difficult task: different systems have different compilers, libraries, system commands etc. This task can be helped by tools like CMake and GNU Autotools.\n\nIn this Hackathon, we will help code developers better understand how to use these build systems to improve the portability of their applications. In addition, well-done configuration scripts facilitate the packaging of the software, and presentations will be given to propose different packaging possibilities to distribute the software.\n\nThis Hackathon is a multi-day virtual event targeting students, engineers and researchers developing HPC open-source software. It aims at helping teams of one to six developers improve the build scripts of codes they develop. The supported build systems for this Hackathon are Autotools and CMake.", "eventAttendanceMode": "https://schema.org/OnlineEventAttendanceMode", "eventStatus": "https://schema.org/EventScheduled", "image": {"@type": "ImageObject", "representativeOfPage": "True", "url": "images/FocusCoE_placeholder.webp", "width": 720, "height": 231}, "doorTime": "2021-11-08T09:00:00+0100", "startDate": "2021-11-08T09:00:00+0100", "endDate": "2021-11-12T17:00:00+0100", "@id": "https://hpc-portal.eu/node/1327", "isAccessibleForFree": "True", "location": {"@type": "VirtualLocation", "url": "https://trex-coe.eu/events/trex-build-system-hackathon-8-12-nov-2021", "geo": {"@type": "GeoCoordinates", "latitude": "52.2383461", "longitude": "6.8506685"}}, "language": ["English"], "sector": ["Research and Academia", "Industry"], "country": ["Netherlands"], "projects": ["TREX"], "level": ["Beginner", "Intermediate"], "online": ["Blended (mixture of live and self-paced)"], "html_description": "<p>Making HPC software easy to install on multiple supercomputers or different architectures is a difficult task: different systems have different compilers, libraries, system commands etc. This task can be helped by tools like <a href=\"https://cmake.org/\">CMake</a> and <a href=\"https://www.gnu.org/software/autoconf/\">GNU Autotools</a>.</p> <p>In this Hackathon, we will help code developers better understand how to use these build systems to improve the portability of their applications. In addition, well-done configuration scripts facilitate the packaging of the software, and presentations will be given to propose different packaging possibilities to distribute the software.</p> <p>This Hackathon is a multi-day virtual event targeting students, engineers and researchers developing HPC open-source software. It aims at helping teams of one to six developers improve the build scripts of codes they develop. The supported build systems for this Hackathon are Autotools and CMake.</p>", "markdown_description": "Making HPC software easy to install on multiple supercomputers or different architectures is a difficult task: different systems have different compilers, libraries, system commands etc. This task can be helped by tools like [CMake](https://cmake.org/) and [GNU Autotools](https://www.gnu.org/software/autoconf/).\n\nIn this Hackathon, we will help code developers better understand how to use these build systems to improve the portability of their applications. In addition, well-done configuration scripts facilitate the packaging of the software, and presentations will be given to propose different packaging possibilities to distribute the software.\n\nThis Hackathon is a multi-day virtual event targeting students, engineers and researchers developing HPC open-source software. It aims at helping teams of one to six developers improve the build scripts of codes they develop. The supported build systems for this Hackathon are Autotools and CMake.", "summary": "Making HPC software easy to install on multiple supercomputers or different architectures is a difficult task: different systems have..."}]}, {"@context": "https://schema.org", "@graph": [{"@type": "Event", "name": "PATC: Tools and techniques to quickly improve performances of HPC applications in Solid Earth", "url": "https://events.prace-ri.eu/event/973/registrations/708/", "description": "This is a course targeted to improve the overall performance of a code in Solid Earth, currently in use at the CHEESE Center of Excellence H2020 project. Parallel performance profiling tools will be provided on the initial version of the code to find the so-called performance bottlenecks. Starting from the profiling analysis, it will show how and where to intervene with respect to the hardware characterization of the HPC machine used for the investigation.\n\nWe will show also how debug tools will be useful in the development / optimization phase to eliminate any possible bugs introduced in the writing (or redesign) of new parts of the code. Finally, it will be shown how to improve the overall performance of the code with respect to other popular parameters such as I / O, vectorization, etc.\n\n**Skills:**  \nAt the end of the course the student will be able to:\n\nAchieve the main information about performance of today HPC computer\n\nUse a concrete methodology to improve the performance of a code in Solid Earth already in use in the context of  \nChEESE project\n\nFind and solve the main bottlenecks of an application with respect to appropriate computational metrics  \nand the machine used\n\nUse appropriate debugging tools to eliminate any bugs that may arise during the development / optimization phase\n\n**Target audience:**\n\nResearchers in Solid Earth interested to learn and use all those techniques and related tools that may allow them to improve the performance of their code on current HPC architectures in the shortest possible time.", "eventAttendanceMode": "https://schema.org/OnlineEventAttendanceMode", "eventStatus": "https://schema.org/EventScheduled", "image": {"@type": "ImageObject", "representativeOfPage": "True", "url": "images/FocusCoE_placeholder.webp", "width": 720, "height": 231}, "doorTime": "2021-10-26T09:00:00+0200", "startDate": "2021-10-26T09:00:00+0200", "endDate": "2021-10-28T17:00:00+0200", "@id": "https://hpc-portal.eu/node/1480", "isAccessibleForFree": "True", "location": {"@type": "VirtualLocation", "url": "https://events.prace-ri.eu/event/973/registrations/708/", "geo": {"@type": "GeoCoordinates", "latitude": "41.389776101375", "longitude": "2.1160718"}}, "language": ["English"], "sector": ["Research and Academia", "Industry", "Public Sector"], "country": ["Spain"], "projects": ["PRACE", "ChEESE"], "level": ["Beginner", "Intermediate", "Advanced"], "online": ["Live (synchronous)"], "html_description": "<p>This is a course targeted to improve the overall performance of a code in Solid Earth, currently in use at the CHEESE Center of Excellence H2020 project. Parallel performance profiling tools will be provided on the initial version of the code to find the so-called performance bottlenecks. Starting from the profiling analysis, it will show how and where to intervene with respect to the hardware characterization of the HPC machine used for the investigation.</p> <p>We will show also how debug tools will be useful in the development / optimization phase to eliminate any possible bugs introduced in the writing (or redesign) of new parts of the code. Finally, it will be shown how to improve the overall performance of the code with respect to other popular parameters such as I / O, vectorization, etc.</p> <p> <strong>Skills:</strong><br> At the end of the course the student will be able to:</p> <p>Achieve the main information about performance of today HPC computer</p> <p>Use a concrete methodology to improve the performance of a code in Solid Earth already in use in the context of<br> ChEESE project</p> <p>Find and solve the main bottlenecks of an application with respect to appropriate computational metrics<br> and the machine used</p> <p>Use appropriate debugging tools to eliminate any bugs that may arise during the development / optimization phase</p> <p><strong>Target audience: </strong></p> <p>Researchers in Solid Earth interested to learn and use all those techniques and related tools that may allow them to improve the performance of their code on current HPC architectures in the shortest possible time.</p>", "markdown_description": "This is a course targeted to improve the overall performance of a code in Solid Earth, currently in use at the CHEESE Center of Excellence H2020 project. Parallel performance profiling tools will be provided on the initial version of the code to find the so-called performance bottlenecks. Starting from the profiling analysis, it will show how and where to intervene with respect to the hardware characterization of the HPC machine used for the investigation.\n\nWe will show also how debug tools will be useful in the development / optimization phase to eliminate any possible bugs introduced in the writing (or redesign) of new parts of the code. Finally, it will be shown how to improve the overall performance of the code with respect to other popular parameters such as I / O, vectorization, etc.\n\n**Skills:**  \nAt the end of the course the student will be able to:\n\nAchieve the main information about performance of today HPC computer\n\nUse a concrete methodology to improve the performance of a code in Solid Earth already in use in the context of  \nChEESE project\n\nFind and solve the main bottlenecks of an application with respect to appropriate computational metrics  \nand the machine used\n\nUse appropriate debugging tools to eliminate any bugs that may arise during the development / optimization phase\n\n**Target audience:**\n\nResearchers in Solid Earth interested to learn and use all those techniques and related tools that may allow them to improve the performance of their code on current HPC architectures in the shortest possible time.", "summary": "This is a course targeted to improve the overall performance of a code in Solid Earth, currently in use at the CHEESE Center of..."}]}]